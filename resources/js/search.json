[[{"l":"module_lang"}],[{"l":"Changelog","p":["All notable changes to this project will be documented in this file."]},{"i":"0121---2023-11-29","l":"0.12.1 - 2023-11-29","p":["⚡️ Performance improvements","BigNumber::of() is now faster, thanks to @SebastienDug in #77."]},{"i":"0120---2023-11-26","l":"0.12.0 - 2023-11-26","p":["\uD83D\uDCA5 Breaking changes","Minimum PHP version is now 8.1","RoundingMode is now an enum; if you're type-hinting rounding modes, you need to type-hint against RoundingMode instead of int now","BigNumber classes do not implement the Serializable interface anymore (they use the new custom object serialization mechanism)","The following breaking changes only affect you if you're creating your own BigNumber subclasses:","the return type of BigNumber::of() is now static","BigNumber has a new abstract method from()","all public and protected functions of BigNumber are now final"]},{"i":"0110---2023-01-16","l":"0.11.0 - 2023-01-16","p":["\uD83D\uDCA5 Breaking changes","Minimum PHP version is now 8.0","Methods accepting a union of types are now strongly typed*","MathException now extends Exception instead of RuntimeException","* You may now run into type errors if you were passing Stringable objects to of() or any of the methods internally calling of(), with strict_types enabled. You can fix this by casting Stringable objects to string first."]},{"i":"0102---2022-08-11","l":"0.10.2 - 2022-08-11","p":["\uD83D\uDC4C Improvements","BigRational::toFloat() now simplifies the fraction before performing division (#73) thanks to @olsavmic"]},{"i":"0101---2022-08-02","l":"0.10.1 - 2022-08-02","p":["✨ New features","BigInteger::gcdMultiple() returns the GCD of multiple BigInteger numbers"]},{"i":"0100---2022-06-18","l":"0.10.0 - 2022-06-18","p":["\uD83D\uDCA5 Breaking changes","Minimum PHP version is now 7.4"]},{"i":"093---2021-08-15","l":"0.9.3 - 2021-08-15","p":["\uD83D\uDE80 Compatibility with PHP 8.1","Support for custom object serialization; this removes a warning on PHP 8.1 due to the Serializable interface being deprecated (#60) thanks @TRowbotham"]},{"i":"092---2021-01-20","l":"0.9.2 - 2021-01-20","p":["\uD83D\uDC1B Bug fix","Incorrect results could be returned when using the BCMath calculator, with a default scale set with bcscale(), on PHP >= 7.2 (#55)."]},{"i":"091---2020-08-19","l":"0.9.1 - 2020-08-19","p":["✨ New features","BigInteger::not() returns the bitwise NOT value","\uD83D\uDC1B Bug fixes","BigInteger::toBytes() could return an incorrect binary representation for some numbers","The bitwise operations and(), or(), xor() on BigInteger could return an incorrect result when the GMP extension is not available"]},{"i":"090---2020-08-18","l":"0.9.0 - 2020-08-18","p":["\uD83D\uDC4C Improvements","BigNumber::of() now accepts .123 and 123. formats, both of which return a BigDecimal","\uD83D\uDCA5 Breaking changes","Deprecated method BigInteger::powerMod() has been removed - use modPow() instead","Deprecated method BigInteger::parse() has been removed - use fromBase() instead"]},{"i":"0817---2020-08-19","l":"0.8.17 - 2020-08-19","p":["\uD83D\uDC1B Bug fix","BigInteger::toBytes() could return an incorrect binary representation for some numbers","The bitwise operations and(), or(), xor() on BigInteger could return an incorrect result when the GMP extension is not available"]},{"i":"0816---2020-08-18","l":"0.8.16 - 2020-08-18","p":["\uD83D\uDE91 Critical fix","This version reintroduces the deprecated BigInteger::parse() method, that has been removed by mistake in version 0.8.9 and should have lasted for the whole 0.8 release cycle.","✨ New features","BigInteger::modInverse() calculates a modular multiplicative inverse","BigInteger::fromBytes() creates a BigInteger from a byte string","BigInteger::toBytes() converts a BigInteger to a byte string","BigInteger::randomBits() creates a pseudo-random BigInteger of a given bit length","BigInteger::randomRange() creates a pseudo-random BigInteger between two bounds","\uD83D\uDCA9 Deprecations","BigInteger::powerMod() is now deprecated in favour of modPow()"]},{"i":"0815---2020-04-15","l":"0.8.15 - 2020-04-15","p":["\uD83D\uDC1B Fixes","added missing ext-json requirement, due to BigNumber implementing JsonSerializable","⚡️ Optimizations","additional optimization in BigInteger::remainder()"]},{"i":"0814---2020-02-18","l":"0.8.14 - 2020-02-18","p":["✨ New features","BigInteger::getLowestSetBit() returns the index of the rightmost one bit"]},{"i":"0813---2020-02-16","l":"0.8.13 - 2020-02-16","p":["✨ New features","BigInteger::isEven() tests whether the number is even","BigInteger::isOdd() tests whether the number is odd","BigInteger::testBit() tests if a bit is set","BigInteger::getBitLength() returns the number of bits in the minimal representation of the number"]},{"i":"0812---2020-02-03","l":"0.8.12 - 2020-02-03","p":["\uD83D\uDEE0️ Maintenance release","Classes are now annotated for better static analysis with psalm.","This is a maintenance release: no bug fixes, no new features, no breaking changes."]},{"i":"0811---2020-01-23","l":"0.8.11 - 2020-01-23","p":["✨ New feature","BigInteger::powerMod() performs a power-with-modulo operation. Useful for crypto."]},{"i":"0810---2020-01-21","l":"0.8.10 - 2020-01-21","p":["✨ New feature","BigInteger::mod() returns the modulo of two numbers. The modulo differs from the remainder when the signs of the operands are different."]},{"i":"089---2020-01-08","l":"0.8.9 - 2020-01-08","p":["⚡️ Performance improvements","A few additional optimizations in BigInteger and BigDecimal when one of the operands can be returned as is. Thanks to @tomtomsen in #24."]},{"i":"088---2019-04-25","l":"0.8.8 - 2019-04-25","p":["\uD83D\uDC1B Bug fixes","BigInteger::toBase() could return an empty string for zero values (BCMath & Native calculators only, GMP calculator unaffected)","✨ New features","BigInteger::toArbitraryBase() converts a number to an arbitrary base, using a custom alphabet","BigInteger::fromArbitraryBase() converts a string in an arbitrary base, using a custom alphabet, back to a number","These methods can be used as the foundation to convert strings between different bases/alphabets, using BigInteger as an intermediate representation.","\uD83D\uDCA9 Deprecations","BigInteger::parse() is now deprecated in favour of fromBase()","BigInteger::fromBase() works the same way as parse(), with 2 minor differences:","the $base parameter is required, it does not default to 10","it throws a NumberFormatException instead of an InvalidArgumentException when the number is malformed"]},{"i":"087---2019-04-20","l":"0.8.7 - 2019-04-20","p":["Improvements","Safer conversion from float when using custom locales","Much faster NativeCalculator implementation \uD83D\uDE80","You can expect at least a 3x performance improvement for common arithmetic operations when using the library on systems without GMP or BCMath; it gets exponentially faster on multiplications with a high number of digits. This is due to calculations now being performed on whole blocks of digits (the block size depending on the platform, 32-bit or 64-bit) instead of digit-by-digit as before."]},{"i":"086---2019-04-11","l":"0.8.6 - 2019-04-11","p":["New method","BigNumber::sum() returns the sum of one or more numbers."]},{"i":"085---2019-02-12","l":"0.8.5 - 2019-02-12","p":["Bug fix: of() factory methods could fail when passing a float in environments using a LC_NUMERIC locale with a decimal separator other than '.'(#20).","Thanks @manowark \uD83D\uDC4D"]},{"i":"084---2018-12-07","l":"0.8.4 - 2018-12-07","p":["New method","BigDecimal::sqrt() calculates the square root of a decimal number, to a given scale."]},{"i":"083---2018-12-06","l":"0.8.3 - 2018-12-06","p":["New method","BigInteger::sqrt() calculates the square root of a number (thanks @peter279k).","New exception","NegativeNumberException is thrown when calling sqrt() on a negative number."]},{"i":"082---2018-11-08","l":"0.8.2 - 2018-11-08","p":["Performance update","Further improvement of toInt() performance","NativeCalculator can now perform some multiplications more efficiently"]},{"i":"081---2018-11-07","l":"0.8.1 - 2018-11-07","p":["Performance optimization of toInt() methods."]},{"i":"080---2018-10-13","l":"0.8.0 - 2018-10-13","p":["and()","BigDecimal::getFraction()","BigDecimal::getFractionalPart()","BigDecimal::getIntegral()","BigDecimal::getIntegralPart()","BigInteger has been augmented with 5 new methods for bitwise operations:","Breaking changes","Description","Method removed","New features","New method","or()","performs a bitwise AND operation on two numbers","performs a bitwise OR operation on two numbers","performs a bitwise XOR operation on two numbers","Replacement method","returns the number shifted left by a number of bits","returns the number shifted right by a number of bits","shiftedLeft()","shiftedRight()","Thanks to @DASPRiD \uD83D\uDC4D","The following deprecated methods have been removed. Use the new method name instead:","xor()"]},{"i":"073---2018-08-20","l":"0.7.3 - 2018-08-20","p":["New method: BigDecimal::hasNonZeroFractionalPart()","Renamed/deprecated methods:","BigDecimal::getIntegral() has been renamed to getIntegralPart() and is now deprecated","BigDecimal::getFraction() has been renamed to getFractionalPart() and is now deprecated"]},{"i":"072---2018-07-21","l":"0.7.2 - 2018-07-21","p":["Performance update","BigInteger::parse() and toBase() now use GMP's built-in base conversion features when available."]},{"i":"071---2018-03-01","l":"0.7.1 - 2018-03-01","p":["This is a maintenance release, no code has been changed.","When installed with --no-dev, the autoloader does not autoload tests anymore","Tests and other files unnecessary for production are excluded from the dist package","This will help make installations more compact."]},{"i":"070---2017-10-02","l":"0.7.0 - 2017-10-02","p":["Methods renamed:","BigNumber:sign() has been renamed to getSign()","BigDecimal::unscaledValue() has been renamed to getUnscaledValue()","BigDecimal::scale() has been renamed to getScale()","BigDecimal::integral() has been renamed to getIntegral()","BigDecimal::fraction() has been renamed to getFraction()","BigRational::numerator() has been renamed to getNumerator()","BigRational::denominator() has been renamed to getDenominator()","Classes renamed:","ArithmeticException has been renamed to MathException"]},{"i":"062---2017-10-02","l":"0.6.2 - 2017-10-02","p":["The base class for all exceptions is now MathException. ArithmeticException has been deprecated, and will be removed in 0.7.0."]},{"i":"061---2017-10-02","l":"0.6.1 - 2017-10-02","p":["A number of methods have been renamed:","BigNumber:sign() is deprecated; use getSign() instead","BigDecimal::unscaledValue() is deprecated; use getUnscaledValue() instead","BigDecimal::scale() is deprecated; use getScale() instead","BigDecimal::integral() is deprecated; use getIntegral() instead","BigDecimal::fraction() is deprecated; use getFraction() instead","BigRational::numerator() is deprecated; use getNumerator() instead","BigRational::denominator() is deprecated; use getDenominator() instead","The old methods will be removed in version 0.7.0."]},{"i":"060---2017-08-25","l":"0.6.0 - 2017-08-25","p":["Minimum PHP version is now 7.1; for PHP 5.6 and PHP 7.0 support, use version 0.5","Deprecated method BigDecimal::withScale() has been removed; use toScale() instead","Method BigNumber::toInteger() has been renamed to toInt()"]},{"i":"054---2016-10-17","l":"0.5.4 - 2016-10-17","p":["BigNumber classes now implement JsonSerializable. The JSON output is always a string."]},{"i":"053---2016-03-31","l":"0.5.3 - 2016-03-31","p":["This is a bugfix release. Dividing by a negative power of 1 with the same scale as the dividend could trigger an incorrect optimization which resulted in a wrong result. See #6."]},{"i":"052---2015-08-06","l":"0.5.2 - 2015-08-06","p":["The $scale parameter of BigDecimal::dividedBy() is now optional again."]},{"i":"051---2015-07-05","l":"0.5.1 - 2015-07-05","p":["New method: BigNumber::toScale()","This allows to convert any BigNumber to a BigDecimal with a given scale, using rounding if necessary."]},{"i":"050---2015-07-04","l":"0.5.0 - 2015-07-04","p":["ArithmeticException is moved to an Exception\\ sub-namespace","BigDecimal:","BigInteger:","BigInteger::dividedBy() now throws an exception by default if the remainder is not zero; use quotient() to get the previous behaviour","BigRational:","Breaking changes","Common BigNumber interface for all classes, with the following methods:","compareTo() and derived methods ( isEqualTo(), isGreaterThan(), ...) that work across different BigNumber types","divideAndRemainder() is renamed to quotientAndRemainder()","dividedBy() now takes a mandatory$scale parameter before the rounding mode","Factory methods zero(), one() and ten() available in all classes","Fine-grained exceptions: DivisionByZeroException, RoundingNecessaryException, NumberFormatException","getDenominator() is renamed to denominator()","getFraction() is renamed to fraction()","getIntegral() is renamed to integral()","getNumerator() is renamed to numerator()","getScale() is renamed to scale()","getSign() is renamed to sign()","getUnscaledValue() is renamed to unscaledValue()","Miscellaneous:","New features","New method: BigDecimal::exactlyDividedBy(); this method automatically computes the scale of the result, provided that the division yields a finite number of digits","New methods: BigRational::quotient() and remainder()","of() factory methods now throw NumberFormatException instead of InvalidArgumentException","of() is renamed to nd(), while parse() is renamed to of()","Rounding mode reintroduced in BigInteger::dividedBy()","sign() and derived methods ( isZero(), isPositive(), ...)","This release also comes with many performance improvements.","toBigInteger() does not accept a $roundingMode parameter anymore","toBigInteger(), toBigDecimal(), toBigRational() conversion methods","toBigRational() does not simplify the fraction anymore; explicitly add -simplified() to get the previous behaviour","toInteger() and toFloat() conversion methods to native types","toString() is renamed to toBase()","Unified of() behaviour: every class now accepts any type of number, provided that it can be safely converted to the current type"]},{"i":"043---2016-03-31","l":"0.4.3 - 2016-03-31","p":["Backport of two bug fixes from the 0.5 branch:","BigInteger::parse() did not always throw InvalidArgumentException as expected","Dividing by a negative power of 1 with the same scale as the dividend could trigger an incorrect optimization which resulted in a wrong result. See #6."]},{"i":"042---2015-06-16","l":"0.4.2 - 2015-06-16","p":["New method: BigDecimal::stripTrailingZeros()"]},{"i":"041---2015-06-12","l":"0.4.1 - 2015-06-12","p":["Introducing a BigRational class, to perform calculations on fractions of any size."]},{"i":"040---2015-06-12","l":"0.4.0 - 2015-06-12","p":["Rounding modes have been removed from BigInteger, and are now a concept specific to BigDecimal.","BigInteger::dividedBy() now always returns the quotient of the division."]},{"i":"035---2016-03-31","l":"0.3.5 - 2016-03-31","p":["Backport of two bug fixes from the 0.5 branch:","BigInteger::parse() did not always throw InvalidArgumentException as expected","Dividing by a negative power of 1 with the same scale as the dividend could trigger an incorrect optimization which resulted in a wrong result. See #6."]},{"i":"034---2015-06-11","l":"0.3.4 - 2015-06-11","p":["New methods:","BigInteger::remainder() returns the remainder of a division only","BigInteger::gcd() returns the greatest common divisor of two numbers"]},{"i":"033---2015-06-07","l":"0.3.3 - 2015-06-07","p":["Fix toString() not handling negative numbers."]},{"i":"032---2015-06-07","l":"0.3.2 - 2015-06-07","p":["BigInteger and BigDecimal now have a getSign() method that returns:","-1 if the number is negative","0 if the number is zero","1 if the number is positive"]},{"i":"031---2015-06-05","l":"0.3.1 - 2015-06-05","p":["Minor performance improvements"]},{"i":"030---2015-06-04","l":"0.3.0 - 2015-06-04","p":["The $roundingMode and $scale parameters have been swapped in BigDecimal::dividedBy()."]},{"i":"022---2015-06-04","l":"0.2.2 - 2015-06-04","p":["Stronger immutability guarantee for BigInteger and BigDecimal.","So far, it would have been possible to break immutability of these classes by calling the unserialize() internal function. This release fixes that."]},{"i":"021---2015-06-02","l":"0.2.1 - 2015-06-02","p":["Added BigDecimal::divideAndRemainder()"]},{"i":"020---2015-05-22","l":"0.2.0 - 2015-05-22","p":["min() and max() do not accept an array anymore, but a variable number of parameters","minimum PHP version is now 5.6","continuous integration with PHP 7"]},{"i":"011---2014-09-01","l":"0.1.1 - 2014-09-01","p":["Added BigInteger::power()","Added HHVM support"]},{"i":"010---2014-08-31","l":"0.1.0 - 2014-08-31","p":["First beta release."]}],[{"i":"carbonphpcarbon-doctrine-types","l":"carbonphp/carbon-doctrine-types","p":["Types to use Carbon in Doctrine"]},{"l":"Documentation","p":["Check how to use in the official Carbon documentation","This package is an externalization of src/Carbon/Doctrine from nestbot/carbon package.","Externalization allows to better deal with different versions of dbal. With version 4.0 of dbal, it no longer sustainable to be compatible with all version using a single code."]}],[{"l":"Doctrine Inflector","p":["Doctrine Inflector is a small library that can perform string manipulations with regard to uppercase/lowercase and singular/plural forms of words.","Build Status Code Coverage"]}],[{"l":"LICENSE","p":["The MIT License (MIT)","Copyright (c) Taylor Otwell","Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."]}],[{"l":"LICENSE","p":["The MIT License (MIT)","Copyright (c) Taylor Otwell","Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."]}],[{"l":"LICENSE","p":["The MIT License (MIT)","Copyright (c) Taylor Otwell","Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."]}],[{"l":"LICENSE","p":["The MIT License (MIT)","Copyright (c) Taylor Otwell","Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."]}],[{"l":"Database"},{"l":"Illuminate Database","p":["The Illuminate Database component is a full database toolkit for PHP, providing an expressive query builder, ActiveRecord style ORM, and schema builder. It currently supports MySQL, Postgres, SQL Server, and SQLite. It also serves as the database layer of the Laravel PHP framework."]},{"l":"Usage Instructions","p":["First, create a new \"Capsule\" manager instance. Capsule aims to make configuring the library for usage outside of the Laravel framework as easy as possible.","composer require illuminate/events required when you need to use observers with Eloquent.","Once the Capsule instance has been registered. You may use it like so:","Using The Query Builder","Other core methods may be accessed directly from the Capsule in the same manner as from the DB facade:","Using The Schema Builder","Using The Eloquent ORM","For further documentation on using the various database facilities this library provides, consult the Laravel framework documentation."]}],[{"l":"LICENSE","p":["The MIT License (MIT)","Copyright (c) Taylor Otwell","Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."]}],[{"l":"LICENSE","p":["The MIT License (MIT)","Copyright (c) Taylor Otwell","Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."]}],[{"l":"LICENSE","p":["The MIT License (MIT)","Copyright (c) Taylor Otwell","Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."]}],[{"l":"Carbon","p":["Latest Stable Version Total Downloads GitHub Actions codecov.io","An international PHP extension for DateTime. https://carbon.nesbot.com"]},{"l":"Installation"},{"l":"With Composer"},{"l":"Without Composer","p":["Why are you not using composer? Download the Carbon latest release and put the contents of the ZIP archive into a directory in your project. Then require the file autoload.php to get all classes and dependencies loaded on need."]},{"l":"Documentation","p":["https://carbon.nesbot.com/docs","⚠️ Documentation is being updated to reflect behavior on the version 3 See the migration section listing the main differences between Carbon 2 and Carbon 3","If you see a section referring to Carbon 2 behavior outside this section or have any doubt about other documentation part, do not hesitate to open an issue to raise it."]},{"l":"Security contact information","p":["To report a security vulnerability, please use the Tidelift security contact. Tidelift will coordinate the fix and disclosure."]},{"l":"Credits"},{"l":"Contributors","p":["This project exists thanks to all the people who contribute."]},{"l":"Translators","p":["Thanks to people helping us to translate Carbon in so many languages"]},{"l":"Sponsors","p":["Support this project by becoming a sponsor. Your logo will show up here with a link to your website.","[Become a sponsor via OpenCollective]","[Become a sponsor via GitHub]"]},{"l":"Backers","p":["Thank you to all our backers! \uD83D\uDE4F","[Become a backer]"]},{"l":"Carbon for enterprise","p":["Available as part of the Tidelift Subscription.","The maintainers of Carbon and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more."]}],[{"l":"PHP FIG Simple Cache PSR","p":["This repository holds all interfaces related to PSR-16.","Note that this is not a cache implementation of its own. It is merely an interface that describes a cache implementation. See the specification for more details.","You can find implementations of the specification by looking for packages providing the psr/simple-cache-implementation virtual package."]}],[{"i":"the-mit-license-mit","l":"The MIT License (MIT)","p":["Copyright (c) 2016 PHP Framework Interoperability Group","Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."]}],[{"l":"PSR Clock","p":["This repository holds the interface for PSR-20.","Note that this is not a clock of its own. It is merely an interface that describes a clock. See the specification for more details."]},{"l":"Installation"},{"l":"Usage","p":["If you need a clock, you can use the interface like this:","You can then pick one of the implementations of the interface to get a clock.","If you want to implement the interface, you can require this package and implement Psr\\Clock\\ClockInterface in your code.","Don't forget to add psr/clock-implementation to your composer.json s provides-section like this:","And please read the specification text for details on the interface."]}],[{"l":"Changelog","p":["All notable changes to this project will be documented in this file, in reverse chronological order by release."]},{"i":"100","l":"1.0.0","p":["First stable release after PSR-20 acceptance"]},{"i":"010","l":"0.1.0","p":["First release"]}],[{"l":"Container interface","p":["This repository holds all interfaces related to PSR-11 (Container Interface).","Note that this is not a Container implementation of its own. It is merely abstractions that describe the components of a Dependency Injection Container.","The installable package and implementations are listed on Packagist."]}],[{"l":"Generate slugs when saving Eloquent models","p":["Latest Version on Packagist MIT Licensed GitHub Workflow Status Total Downloads","This package provides a trait that will generate a unique slug when saving any Eloquent model.","The slugs are generated with Laravels Str::slug method, whereby spaces are converted to '-'.","Spatie is a webdesign agency based in Antwerp, Belgium. You'll find an overview of all our open source projects on our website."]},{"l":"Support us","p":["We invest a lot of resources into creating best in class open source packages. You can support us by buying one of our paid products.","We highly appreciate you sending us a postcard from your hometown, mentioning which of our package(s) you are using. You'll find our address on our contact page. We publish all received postcards on our virtual postcard wall."]},{"l":"Installation","p":["You can install the package via composer:"]},{"l":"Usage","p":["Your Eloquent models should use the Spatie\\Sluggable\\HasSlug trait and the Spatie\\Sluggable\\SlugOptions class.","The trait contains an abstract method getSlugOptions() that you must implement yourself.","Your models' migrations should have a field to save the generated slug to.","Here's an example of how to implement the trait:","With its migration:"]},{"l":"Using slugs in routes","p":["To use the generated slug in routes, remember to use Laravel's implicit route model binding:"]},{"l":"Using multiple fields to create the slug","p":["Want to use multiple field as the basis for a slug? No problem!"]},{"l":"Customizing slug generation","p":["You can also pass a callable to generateSlugsFrom.","By default the package will generate unique slugs by appending '-' and a number, to a slug that already exists.","You can disable this behaviour by calling allowDuplicateSlugs."]},{"l":"Limiting the length of a slug","p":["You can also put a maximum size limit on the created slug:","The slug may be slightly longer than the value specified, due to the suffix which is added to make it unique.","You can also use a custom separator by calling usingSeparator"]},{"l":"Setting the slug language","p":["To set the language used by Str::slug you may call usingLanguage"]},{"l":"Overriding slugs","p":["You can also override the generated slug just by setting it to another value than the generated slug."]},{"l":"Prevents slugs from being generated on some conditions","p":["If you don't want to create the slug when the model has a state, you can use the skipGenerateWhen function."]},{"l":"Prevent slugs from being generated on creation","p":["If you don't want to create the slug when the model is initially created you can set use the doNotGenerateSlugsOnCreate() function."]},{"l":"Prevent slug updates","p":["Similarly, if you want to prevent the slug from being updated on model updates, call doNotGenerateSlugsOnUpdate().","This can be helpful for creating permalinks that don't change until you explicitly want it to."]},{"l":"Regenerating slugs","p":["If you want to explicitly update the slug on the model you can call generateSlug() on your model at any time to make the slug according to your other options. Don't forget to save() the model to persist the update to your database."]},{"l":"Preventing overwrites","p":["You can prevent slugs from being overwritten."]},{"l":"Using scopes","p":["If you have a global scope that should be taken into account, you can define this as well with extraScope. For example if you have a pages table containing pages of multiple websites and every website has it's own unique slugs."]},{"l":"Setting the slug suffix starting index","p":["By default, suffix index starts from 1, you can set starting number."]},{"l":"Integration with laravel-translatable","p":["You can use this package along with laravel-translatable to generate a slug for each locale. Instead of using the HasSlug trait, you must use the HasTranslatableSlug trait, and add the name of the slug field to the $translatable array. For slugs that are generated from a single field or multiple fields, you don't have to change anything else.","For slugs that are generated from a callable, you need to instantiate the SlugOptions with the createWithLocales method. The callable now takes two arguments instead of one. Both the $model and the $locale are available to generate a slug from."]},{"l":"Implicit route model binding","p":["You can also use Laravels implicit route model binding inside your controller to automatically resolve the model. To use this feature, make sure that the slug column matches the routeNameKey. Currently, only some database types support JSON operations. Further information about which databases support JSON can be found in the Laravel docs."]},{"l":"Find models by slug","p":["For convenience, you can use the alias findBySlug to retrieve a model. The query will compare against the field passed to saveSlugsTo when defining the SlugOptions.","findBySlug also accepts a second parameter $columns just like the default Eloquent find method."]},{"l":"Changelog","p":["Please see CHANGELOG for more information what has changed recently."]},{"l":"Testing"},{"l":"Contributing","p":["Please see CONTRIBUTING for details."]},{"l":"Security","p":["If you've found a bug regarding security please mail security@spatie.be instead of using the issue tracker."]},{"l":"Credits","p":["Freek Van der Herten","All Contributors"]},{"l":"License","p":["The MIT License (MIT). Please see License File for more information."]}],[{"l":"Changelog","p":["All notable changes to laravel-sluggable will be documented in this file"]},{"i":"350---2023-05-29","l":"3.5.0 - 2023-05-29"},{"i":"whats-changed","l":"What's Changed","p":["Bump dependabot/fetch-metadata from 1.3.5 to 1.3.6 by @dependabot in https://github.com/spatie/laravel-sluggable/pull/250","Fix badge with build status in README.md by @gomzyakov in https://github.com/spatie/laravel-sluggable/pull/252","Bump dependabot/fetch-metadata from 1.3.6 to 1.4.0 by @dependabot in https://github.com/spatie/laravel-sluggable/pull/255","feat: add findBySlug alias by @IsraelOrtuno in https://github.com/spatie/laravel-sluggable/pull/256"]},{"l":"New Contributors","p":["@gomzyakov made their first contribution in https://github.com/spatie/laravel-sluggable/pull/252","@IsraelOrtuno made their first contribution in https://github.com/spatie/laravel-sluggable/pull/256","Full Changelog: https://github.com/spatie/laravel-sluggable/compare/3.4.2...3.5.0"]},{"i":"342---2023-01-23","l":"3.4.2 - 2023-01-23","p":["update for Laravel 10"]},{"i":"341---2022-12-07","l":"3.4.1 - 2022-12-07"},{"i":"whats-changed-1","l":"What's Changed","p":["Update README.md by @furiouskj in https://github.com/spatie/laravel-sluggable/pull/240","composer allow-plugins config by @hotsaucejake in https://github.com/spatie/laravel-sluggable/pull/241","Normalize composer.json by @patinthehat in https://github.com/spatie/laravel-sluggable/pull/247","Add Dependabot Automation by @patinthehat in https://github.com/spatie/laravel-sluggable/pull/246","Add PHP 8.2 Support by @patinthehat in https://github.com/spatie/laravel-sluggable/pull/245","Bump actions/checkout from 2 to 3 by @dependabot in https://github.com/spatie/laravel-sluggable/pull/248","Allow set slug suffix starting number by @Vediovis in https://github.com/spatie/laravel-sluggable/pull/249"]},{"i":"new-contributors-1","l":"New Contributors","p":["@furiouskj made their first contribution in https://github.com/spatie/laravel-sluggable/pull/240","@hotsaucejake made their first contribution in https://github.com/spatie/laravel-sluggable/pull/241","@dependabot made their first contribution in https://github.com/spatie/laravel-sluggable/pull/248","@Vediovis made their first contribution in https://github.com/spatie/laravel-sluggable/pull/249","Full Changelog: https://github.com/spatie/laravel-sluggable/compare/3.4.0...3.4.1"]},{"i":"340---2022-03-28","l":"3.4.0 - 2022-03-28"},{"i":"whats-changed-2","l":"What's Changed","p":["Converts Test cases to Pest tests by @marvin-wtt in https://github.com/spatie/laravel-sluggable/pull/223","Add ability to skip the slug generation by a condition by @masterix21 in https://github.com/spatie/laravel-sluggable/pull/227"]},{"i":"new-contributors-2","l":"New Contributors","p":["@masterix21 made their first contribution in https://github.com/spatie/laravel-sluggable/pull/227","Full Changelog: https://github.com/spatie/laravel-sluggable/compare/3.3.1...3.4.0"]},{"i":"331---2022-03-09","l":"3.3.1 - 2022-03-09"},{"i":"whats-changed-3","l":"What's Changed","p":["Add support for spatie/laravel-translatable:^ 6.0 by @mziraki in https://github.com/spatie/laravel-sluggable/pull/224"]},{"i":"new-contributors-3","l":"New Contributors","p":["@mziraki made their first contribution in https://github.com/spatie/laravel-sluggable/pull/224","Full Changelog: https://github.com/spatie/laravel-sluggable/compare/3.3.0...3.3.1"]},{"i":"330---2022-01-13","l":"3.3.0 - 2022-01-13","p":["support Laravel 9"]},{"i":"320---2021-12-15","l":"3.2.0 - 2021-12-15"},{"i":"whats-changed-4","l":"What's Changed","p":["Adds support for implicit route model binding with translated slugs by @marvin-wtt in https://github.com/spatie/laravel-sluggable/pull/213"]},{"i":"new-contributors-4","l":"New Contributors","p":["@marvin-wtt made their first contribution in https://github.com/spatie/laravel-sluggable/pull/213","Full Changelog: https://github.com/spatie/laravel-sluggable/compare/3.1.1...3.2.0"]},{"i":"311---2021-12-13","l":"3.1.1 - 2021-12-13"},{"i":"whats-changed-5","l":"What's Changed","p":["Migrate to PHP-CS-Fixer 3.x by @shuvroroy in https://github.com/spatie/laravel-sluggable/pull/203","Adds test case for replicate method by @eduarguz in https://github.com/spatie/laravel-sluggable/pull/212","Fix Deprecation: currentSlug is null by @phh in https://github.com/spatie/laravel-sluggable/pull/218"]},{"i":"new-contributors-5","l":"New Contributors","p":["@shuvroroy made their first contribution in https://github.com/spatie/laravel-sluggable/pull/203","@eduarguz made their first contribution in https://github.com/spatie/laravel-sluggable/pull/212","@phh made their first contribution in https://github.com/spatie/laravel-sluggable/pull/218","Full Changelog: https://github.com/spatie/laravel-sluggable/compare/3.1.0...3.1.1"]},{"i":"310---2021-06-04","l":"3.1.0 - 2021-06-04","p":["add extra scope callback option (#201)"]},{"i":"302---2021-05-07","l":"3.0.2 - 2021-05-07","p":["bugfix for updating slugs generated from a callback (#200)"]},{"i":"301---2021-04-22","l":"3.0.1 - 2021-04-22","p":["update slug on non unique names (#195)"]},{"i":"300---2021-03-01","l":"3.0.0 - 2021-03-01","p":["require PHP 8+","drop support for PHP 7.x","convert syntax to PHP 8","move Exceptions to Exceptions folder to match structure of other packages"]},{"i":"262---2021-03-20","l":"2.6.2 - 2021-03-20","p":["Added translatable slug overriding (#190)"]},{"i":"261---2020-01-31","l":"2.6.1 - 2020-01-31","p":["fix Eloquent model checking (#186)"]},{"i":"260---2020-10-28","l":"2.6.0 - 2020-10-28","p":["add preventOverwrite","add support for PHP 8"]},{"i":"252---2020-10-01","l":"2.5.2 - 2020-10-01","p":["fixed an incompatibility bug with postgresql uuid column (#173)"]},{"i":"251---2020-09-07","l":"2.5.1 - 2020-09-07","p":["add support for Laravel 8"]},{"i":"250---2020-06-15","l":"2.5.0 - 2020-06-15","p":["add helper trait to integrate with laravel-translatable#155"]},{"i":"242---2020-04-20","l":"2.4.2 - 2020-04-20","p":["fix bug that causes empty slugs when dealing with multi-bytes chars (#152)"]},{"i":"241---2020-04-09","l":"2.4.1 - 2020-04-09","p":["use method for retrieving incrementing status of the model (#151)"]},{"i":"240---2020-03-03","l":"2.4.0 - 2020-03-03","p":["add support for Laravel 7, drop support for Laravel 6"]},{"i":"230---2019-12-06","l":"2.3.0 - 2019-12-06","p":["drop support for anything below PHP 7.4 and Laravel 6"]},{"i":"221---2019-09-16","l":"2.2.1 - 2019-09-16","p":["Changed: Updated Laravel 6 compatibility for future versions"]},{"i":"220---2019-09-04","l":"2.2.0 - 2019-09-04","p":["Drop support for PHP 7.1","Add support for Laravel 6.0"]},{"i":"218---2019-06-08","l":"2.1.8 - 2019-06-08","p":["ensure slugs are unique when using soft deletes"]},{"i":"217---2019-02-26","l":"2.1.7 - 2019-02-26","p":["Add support for Laravel 5.8"]},{"i":"216---2018-02-14","l":"2.1.6 - 2018-02-14","p":["performance improvements"]},{"i":"215---2018-01-10","l":"2.1.5 - 2018-01-10","p":["improve compatibility with json fields"]},{"i":"214---2018-08-28","l":"2.1.4 - 2018-08-28","p":["add support for Laravel 5.7"]},{"i":"213---2018-02-15","l":"2.1.3 - 2018-02-15","p":["fix for models with non incrementing primary keys"]},{"i":"212---2018-02-08","l":"2.1.2 - 2018-02-08","p":["Support Laravel 5.6"]},{"i":"211---2017-01-28","l":"2.1.1 - 2017-01-28","p":["improve compatibility with Lumen"]},{"i":"210---2017-09-13","l":"2.1.0 - 2017-09-13","p":["add usingLanguage"]},{"i":"200---2017-08-31","l":"2.0.0 - 2017-08-31","p":["add support for Laravel 5.5, drop support for all older versions of the framework"]},{"i":"152---2018-05-08","l":"1.5.2 - 2018-05-08","p":["make compatible with PHP 7.2"]},{"i":"151---2017-08-19","l":"1.5.1 - 2017-08-19","p":["fix bugs when using a custom separator"]},{"i":"150---2017-04-13","l":"1.5.0 - 2017-04-13","p":["add usingSeparator()"]},{"i":"141---2017-04-11","l":"1.4.1 - 2017-04-11","p":["ignore global scopes when determining a unique slug"]},{"i":"140---2017-01-24","l":"1.4.0 - 2017-01-24","p":["add support for Laravel 5.4"]},{"i":"130---2016-11-14","l":"1.3.0 - 2016-11-14","p":["add doNotGenerateSlugsOnCreate and doNotGenerateSlugsOnUpdate"]},{"i":"120---2016-06-13","l":"1.2.0 - 2016-06-13","p":["Added the ability to generate slugs from a callable"]},{"i":"110---2016-01-24","l":"1.1.0 - 2016-01-24","p":["Allow custom slugs"]},{"i":"102---2016-01-12","l":"1.0.2 - 2016-01-12","p":["Fix bug when creating slugs from null values"]},{"i":"101---2015-12-27","l":"1.0.1 - 2015-12-27","p":["Fix Postgres bug"]},{"i":"100---2015-12-24","l":"1.0.0 - 2015-12-24","p":["Initial release"]}],[{"l":"LICENSE","p":["The MIT License (MIT)","Copyright (c) Spatie bvba info@spatie.be","Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."]}],[{"l":"Clock Component","p":["Symfony Clock decouples applications from the system clock."]},{"l":"Getting Started"},{"l":"Resources","p":["Documentation","Contributing","Report issues and send Pull Requests in the main Symfony repository"]}],[{"l":"CHANGELOG"},{"i":"71","l":"7.1","p":["Add DatePoint::getMicrosecond() and DatePoint::setMicrosecond()"]},{"i":"64","l":"6.4","p":["Add DatePoint: an immutable DateTime implementation with stricter error handling and return types","Throw DateMalformedStringException/ DateInvalidTimeZoneException when appropriate","Add $modifier argument to the now() helper"]},{"i":"63","l":"6.3","p":["Add ClockAwareTrait to help write time-sensitive classes","Add Clock class and now() function"]},{"i":"62","l":"6.2","p":["Add the component"]}],[{"l":"Symfony Translation Contracts","p":["A set of abstractions extracted out of the Symfony components.","Can be used to build on semantics that the Symfony components proved useful and that already have battle tested implementations.","See https://github.com/symfony/contracts/blob/main/README.md for more information."]}],[{"l":"CHANGELOG","p":["The changelog is maintained for all Symfony contracts at the following URL: https://github.com/symfony/contracts/blob/main/CHANGELOG.md"]}],[{"l":"Translation Component","p":["The Translation component provides tools to internationalize your application."]},{"l":"Getting Started"},{"l":"Sponsor","p":["The Translation component for Symfony 7.1 is backed by:","Crowdin, a cloud-based localization management software helping teams to go global and stay agile.","Help Symfony by sponsoring its development!"]},{"l":"Resources","p":["Documentation","Contributing","Report issues and send Pull Requests in the main Symfony repository"]}],[{"l":"CHANGELOG"},{"i":"71","l":"7.1","p":["Mark class DataCollectorTranslator as final"]},{"i":"70","l":"7.0","p":["Remove PhpStringTokenParser","Remove PhpExtractor in favor of PhpAstExtractor"]},{"i":"64","l":"6.4","p":["Give current locale to LocaleSwitcher::runWithLocale()'s callback","Add --as-tree option to translation:pull command to write YAML messages as a tree-like structure","[BC BREAK] Add argument $buildDir to DataCollectorTranslator::warmUp()","Add DataCollectorTranslatorPass and LoggingTranslatorPass(moved from FrameworkBundle)","Add PhraseTranslationProvider"]},{"i":"627","l":"6.2.7","p":["[BC BREAK] The following data providers for ProviderFactoryTestCase are now static: supportsProvider(), createProvider(), unsupportedSchemeProvider() and incompleteDsnProvider()","[BC BREAK] ProviderTestCase::toStringProvider() is now static"]},{"i":"62","l":"6.2","p":["Deprecate PhpStringTokenParser","Deprecate PhpExtractor in favor of PhpAstExtractor","Add PhpAstExtractor(requires nikic/php-parser to be installed)"]},{"i":"61","l":"6.1","p":["Parameters implementing TranslatableInterface are processed","Add the file extension to the XliffFileDumper constructor"]},{"i":"54","l":"5.4","p":["Add github format & autodetection to render errors as annotations when running the XLIFF linter command in a Github Actions environment.","Translation providers are not experimental anymore"]},{"i":"53","l":"5.3","p":["Add translation:pull and translation:push commands to manage translations with third-party providers","Add TranslatorBagInterface::getCatalogues method","Add support to load XLIFF string in XliffFileLoader"]},{"i":"520","l":"5.2.0","p":["added support for calling trans with ICU formatted messages","added PseudoLocalizationTranslator","added TranslatableMessage objects that represent a message that can be translated","added the t() function to easily create TranslatableMessage objects","Added support for extracting messages from TranslatableMessage objects"]},{"i":"510","l":"5.1.0","p":["added support for name attribute on unit element from xliff2 to be used as a translation key instead of always the source element"]},{"i":"500","l":"5.0.0","p":["removed support for using null as the locale in Translator","removed TranslatorInterface","removed MessageSelector","removed ChoiceMessageFormatterInterface","removed PluralizationRule","removed Interval","removed transChoice() methods, use the trans() method instead with a %count% parameter","removed FileDumper::setBackup() and TranslationWriter::disableBackup()","removed MessageFormatter::choiceFormat()","added argument $filename to PhpExtractor::parseTokens()","removed support for implicit STDIN usage in the lint:xliff command, use lint:xliff -(append a dash) instead to make it explicit."]},{"i":"440","l":"4.4.0","p":["deprecated support for using null as the locale in Translator","deprecated accepting STDIN implicitly when using the lint:xliff command, use lint:xliff -(append a dash) instead to make it explicit.","Marked the TranslationDataCollector class as @final."]},{"i":"430","l":"4.3.0","p":["Improved Xliff 1.2 loader to load the original file's metadata","Added TranslatorPathsPass"]},{"i":"420","l":"4.2.0","p":["Started using ICU parent locales as fallback locales.","allow using the ICU message format using domains with the \"+intl-icu\" suffix","deprecated Translator::transChoice() in favor of using Translator::trans() with a %count% parameter","deprecated TranslatorInterface in favor of Symfony\\Contracts\\Translation\\TranslatorInterface","deprecated MessageSelector, Interval and PluralizationRules; use IdentityTranslator instead","Added IntlFormatter and IntlFormatterInterface","added support for multiple files and directories in XliffLintCommand","Marked Translator::getFallbackLocales() and TranslationDataCollector::getFallbackLocales() as internal"]},{"i":"410","l":"4.1.0","p":["The FileDumper::setBackup() method is deprecated.","The TranslationWriter::disableBackup() method is deprecated.","The XliffFileDumper will write \"name\" on the \"unit\" node when dumping XLIFF 2.0."]},{"i":"400","l":"4.0.0","p":["removed the backup feature of the FileDumper class","removed TranslationWriter::writeTranslations() method","removed support for passing MessageSelector instances to the constructor of the Translator class"]},{"i":"340","l":"3.4.0","p":["Added TranslationDumperPass","Added TranslationExtractorPass","Added TranslatorPass","Added TranslationReader and TranslationReaderInterface","Added notes section to the Xliff 2.0 dumper.","Improved Xliff 2.0 loader to load notes section.","Added TranslationWriterInterface","Deprecated TranslationWriter::writeTranslations in favor of TranslationWriter::write","added support for adding custom message formatter and decoupling the default one.","Added PhpExtractor","Added PhpStringTokenParser"]},{"i":"320","l":"3.2.0","p":["Added support for escaping | in plural translations with double pipe."]},{"i":"310","l":"3.1.0","p":["Deprecated the backup feature of the file dumper classes."]},{"i":"300","l":"3.0.0","p":["removed FileDumper::format() method.","Changed the visibility of the locale property in Translator from protected to private."]},{"i":"280","l":"2.8.0","p":["deprecated FileDumper::format(), overwrite FileDumper::formatCatalogue() instead.","deprecated Translator::getMessages(), rely on TranslatorBagInterface::getCatalogue() instead.","added FileDumper::formatCatalogue which allows format the catalogue without dumping it into file.","added option json_encoding to JsonFileDumper","added options as_tree, inline to YamlFileDumper","added support for XLIFF 2.0.","added support for XLIFF target and tool attributes.","added message parameters to DataCollectorTranslator.","[DEPRECATION] The DiffOperation class has been deprecated and will be removed in Symfony 3.0, since its operation has nothing to do with 'diff', so the class name is misleading. The TargetOperation class should be used for this use-case instead."]},{"i":"270","l":"2.7.0","p":["added DataCollectorTranslator for collecting the translated messages."]},{"i":"260","l":"2.6.0","p":["added possibility to cache catalogues","added TranslatorBagInterface","added LoggingTranslator","added Translator::getMessages() for retrieving the message catalogue as an array"]},{"i":"250","l":"2.5.0","p":["added relative file path template to the file dumpers","added optional backup to the file dumpers","changed IcuResFileDumper to extend FileDumper"]},{"i":"230","l":"2.3.0","p":["added classes to make operations on catalogues (like making a diff or a merge on 2 catalogues)","added Translator::getFallbackLocales()","deprecated Translator::setFallbackLocale() in favor of the new Translator::setFallbackLocales() method"]},{"i":"220","l":"2.2.0","p":["QtTranslationsLoader class renamed to QtFileLoader. QtTranslationsLoader is deprecated and will be removed in 2.3.","[BC BREAK] uniformized the exception thrown by the load() method when an error occurs. The load() method now throws Symfony\\Component\\Translation\\Exception\\NotFoundResourceException when a resource cannot be found and Symfony\\Component\\Translation\\Exception\\InvalidResourceException when a resource is invalid.","changed the exception class thrown by some load() methods from \\RuntimeException to \\InvalidArgumentException(IcuDatFileLoader, IcuResFileLoader and QtFileLoader)"]},{"i":"210","l":"2.1.0","p":["added support for more than one fallback locale","added support for extracting translation messages from templates (Twig and PHP)","added dumpers for translation catalogs","added support for QT, gettext, and ResourceBundles"]}],[{"i":"symfony-polyfill--mbstring","l":"Symfony Polyfill / Mbstring","p":["This component provides a partial, native PHP implementation for the Mbstring extension.","More information can be found in the main Polyfill README."]},{"l":"License","p":["This library is released under the MIT license."]}],[{"i":"symfony-polyfill--php83","l":"Symfony Polyfill / Php83","p":["This component provides features added to PHP 8.3 core:","json_validate","Override","mb_str_pad","ldap_exop_sync","ldap_connect_wallet","stream_context_set_options","str_increment and str_decrement","Date*Exception/Error classes","SQLite3Exception","More information can be found in the main Polyfill README."]},{"l":"License","p":["This library is released under the MIT license."]}],[{"i":"#","p":["SWUbanner","Build Status Build status codecov.io Codacy Badge Latest Stable Version Total Downloads License Donate to this project using Paypal Donate to this project using Patreon"]},{"i":"portable-ascii","l":"\uD83D\uDD21 Portable ASCII"},{"l":"Description","p":["It is written in PHP (PHP 7+) and can work without \"mbstring\", \"iconv\" or any other extra encoding php-extension on your server.","The benefit of Portable ASCII is that it is easy to use, easy to bundle.","The project based on ...","Sean M. Burke's work ( https://metacpan.org/pod/Text::Unidecode)","Tomaz Solc's work ( https://pypi.org/project/Unidecode/)","Portable UTF-8 work ( https://github.com/voku/portable-utf8)","Daniel St. Jules's work ( https://github.com/danielstjules/Stringy)","Johnny Broadway's work ( https://github.com/jbroadway/urlify)","and many cherry-picks from \"github\"-gists and \"Stack Overflow\"-snippets ..."]},{"l":"Index","p":["Alternative","Install","Why Portable ASCII?","Requirements and Recommendations","Usage","Class methods","Unit Test","License and Copyright"]},{"l":"Alternative","p":["If you like a more Object Oriented Way to edit strings, then you can take a look at voku/Stringy, it's a fork of \"danielstjules/Stringy\" but it used the \"Portable ASCII\"-Class and some extra methods."]},{"i":"install-portable-ascii-via-composer-require","l":"Install \"Portable ASCII\" via \"composer require\""},{"i":"why-portable-ascii","l":"Why Portable ASCII?","p":["I need ASCII char handling in different classes and before I added this functions into \"Portable UTF-8\", but this repo is more modular and portable, because it has no dependencies."]},{"l":"Requirements and Recommendations","p":["No extensions are required to run this library. Portable ASCII only needs PCRE library that is available by default since PHP 4.2.0 and cannot be disabled since PHP 5.3.0. \"\\u\" modifier support in PCRE for ASCII handling is not a must.","PHP 7.0 is the minimum requirement","PHP 8.0 is also supported"]},{"l":"Usage","p":["Example: ASCII::to_ascii()"]},{"i":"portable-ascii--api","l":"Portable ASCII | API","p":["The API from the \"ASCII\"-Class is written as small static methods."]},{"l":"Class methods"},{"i":"charsarraybool-replace_extra_symbols-array","l":"charsArray(bool $replace_extra_symbols): array","p":["↑ Returns an replacement array for ASCII methods.","EXAMPLE: $array = ASCII::charsArray(); var_dump($array['ru']['б']); // 'b'","Parameters:","bool $replace_extra_symbols [optional] pAdd some more replacements e.g. £ with pound ./p","Return:","array"]},{"i":"charsarraywithmultilanguagevaluesbool-replace_extra_symbols-array","l":"charsArrayWithMultiLanguageValues(bool $replace_extra_symbols): array","p":["↑ Returns an replacement array for ASCII methods with a mix of multiple languages.","EXAMPLE: $array = ASCII::charsArrayWithMultiLanguageValues(); var_dump($array['b']); // ['β', 'б', 'ဗ', 'ბ', 'ب']","Parameters:","bool $replace_extra_symbols [optional] pAdd some more replacements e.g. £ with pound ./p","Return:","array pAn array of replacements./p"]},{"i":"charsarraywithonelanguagestring-language-bool-replace_extra_symbols-bool-asorigreplacearray-array","l":"charsArrayWithOneLanguage(string $language, bool $replace_extra_symbols, bool $asOrigReplaceArray): array","p":["↑ Returns an replacement array for ASCII methods with one language.","For example, German will map 'ä' to 'ae', while other languages will simply return e.g. 'a'.","EXAMPLE: $array = ASCII::charsArrayWithOneLanguage('ru');$tmpKey = \\array_search('yo', $array['replace']); echo $array['orig'][$tmpKey]; // 'ё'","Parameters:","ASCII::* $language [optional] pLanguage of the source string e.g.: en, de_at, or de-ch. (default is 'en') | ASCII::*_LANGUAGE_CODE/p","bool $replace_extra_symbols [optional] pAdd some more replacements e.g. £ with pound ./p","bool $asOrigReplaceArray [optional] pTRUE === return {orig: string[], replace: string[]} array/p","Return:","array pAn array of replacements./p"]},{"i":"charsarraywithsinglelanguagevaluesbool-replace_extra_symbols-bool-asorigreplacearray-array","l":"charsArrayWithSingleLanguageValues(bool $replace_extra_symbols, bool $asOrigReplaceArray): array","p":["↑ Returns an replacement array for ASCII methods with multiple languages.","EXAMPLE: $array = ASCII::charsArrayWithSingleLanguageValues();$tmpKey = \\array_search('hnaik', $array['replace']); echo $array['orig'][$tmpKey]; // '၌'","Parameters:","bool $replace_extra_symbols [optional] pAdd some more replacements e.g. £ with pound ./p","bool $asOrigReplaceArray [optional] pTRUE === return {orig: string[], replace: string[]} array/p","Return:","array pAn array of replacements./p"]},{"i":"cleanstring-str-bool-normalize_whitespace-bool-keep_non_breaking_space-bool-normalize_msword-bool-remove_invisible_characters-string","l":"clean(string $str, bool $normalize_whitespace, bool $keep_non_breaking_space, bool $normalize_msword, bool $remove_invisible_characters): string","p":["↑ Accepts a string and removes all non-UTF-8 characters from it + extras if needed.","Parameters:","string $str pThe string to be sanitized./p","bool $normalize_whitespace [optional] pSet to true, if you need to normalize the whitespace./p","bool $keep_non_breaking_space [optional] pSet to true, to keep non-breaking-spaces, in combination with $normalize_whitespace/p","bool $normalize_msword [optional] pSet to true, if you need to normalize MS Word chars e.g.: … = .../p","bool $remove_invisible_characters [optional] pSet to false, if you not want to remove invisible characters e.g.: \\0/p","Return:","string pA clean UTF-8 string./p"]},{"i":"getalllanguages-string","l":"getAllLanguages(): string[]","p":["↑ Get all languages from the constants \"ASCII::.* LANGUAGE_CODE\".","Parameters: nothing","Return:","string[]"]},{"i":"is_asciistring-str-bool","l":"is_ascii(string $str): bool","p":["↑ Checks if a string is 7 bit ASCII.","EXAMPLE: ASCII::is_ascii('白'); // false","Parameters:","string $str pThe string to check./p","Return:","`bool true if it is ASCII false otherwise"]},{"i":"normalize_mswordstring-str-string","l":"normalize_msword(string $str): string","p":["↑ Returns a string with smart quotes, ellipsis characters, and dashes from Windows-1252 (commonly used in Word documents) replaced by their ASCII equivalents.","EXAMPLE: ASCII::normalize_msword('„Abcdef…”'); // '\"Abcdef...\"'","Parameters:","string $str pThe string to be normalized./p","Return:","string pA string with normalized characters for commonly used chars in Word documents./p"]},{"i":"normalize_whitespacestring-str-bool-keepnonbreakingspace-bool-keepbidiunicodecontrols-bool-normalize_control_characters-string","l":"normalize_whitespace(string $str, bool $keepNonBreakingSpace, bool $keepBidiUnicodeControls, bool $normalize_control_characters): string","p":["↑ Normalize the whitespace.","EXAMPLE: ASCII::normalize_whitespace(\"abc-\\xc2\\xa0-öäü-\\xe2\\x80\\xaf-\\xE2\\x80\\xAC\", true); // \"abc-\\xc2\\xa0-öäü- -\"","Parameters:","string $str pThe string to be normalized./p","bool $keepNonBreakingSpace [optional] pSet to true, to keep non-breaking-spaces./p","bool $keepBidiUnicodeControls [optional] pSet to true, to keep non-printable (for the web) bidirectional text chars./p","bool $normalize_control_characters [optional] pSet to true, to convert e.g. LINE-, PARAGRAPH-SEPARATOR with \\n and LINE TABULATION with \\t./p","Return:","string pA string with normalized whitespace./p"]},{"i":"remove_invisible_charactersstring-str-bool-url_encoded-string-replacement-bool-keep_basic_control_characters-string","l":"remove_invisible_characters(string $str, bool $url_encoded, string $replacement, bool $keep_basic_control_characters): string","p":["↑ Remove invisible characters from a string.","e.g.: This prevents sandwiching null characters between ascii characters, like Java\\0script.","copy&past from https://github.com/bcit-ci/CodeIgniter/blob/develop/system/core/Common.php","Parameters:","string $str","bool $url_encoded","string $replacement","bool $keep_basic_control_characters","Return:","string"]},{"i":"to_asciistring-str-string-language-bool-remove_unsupported_chars-bool-replace_extra_symbols-bool-use_transliterate-boolnull-replace_single_chars_only-string","l":"to_ascii(string $str, string $language, bool $remove_unsupported_chars, bool $replace_extra_symbols, bool $use_transliterate, bool|null $replace_single_chars_only): string","p":["↑ Returns an ASCII version of the string. A set of non-ASCII characters are replaced with their closest ASCII counterparts, and the rest are removed by default. The language or locale of the source string can be supplied for language-specific transliteration in any of the following formats: en, en_GB, or en-GB. For example, passing \"de\" results in \"äöü\" mapping to \"aeoeue\" rather than \"aou\" as in other languages.","EXAMPLE: ASCII::to_ascii('�Düsseldorf�', 'en'); // Dusseldorf","Parameters:","string $str pThe input string./p","ASCII::* $language [optional] pLanguage of the source string. (default is 'en') | ASCII::*_LANGUAGE_CODE/p","bool $remove_unsupported_chars [optional] pWhether or not to remove the unsupported characters./p","bool $replace_extra_symbols [optional] pAdd some more replacements e.g. £ with pound ./p","bool $use_transliterate [optional] pUse ASCII::to_transliterate() for unknown chars./p","bool|null $replace_single_chars_only [optional] pSingle char replacement is better for the performance, but some languages need to replace more then one char at the same time. | NULL === auto-setting, depended on the language/p","Return:","string pA string that contains only ASCII characters./p"]},{"i":"to_ascii_remapstring-str1-string-str2-string","l":"to_ascii_remap(string $str1, string $str2): string[]","p":["↑ WARNING: This method will return broken characters and is only for special cases.","Convert two UTF-8 encoded string to a single-byte strings suitable for functions that need the same string length after the conversion.","The function simply uses (and updates) a tailored dynamic encoding(in/out map parameter) where non-ascii characters are remapped to the range [128-255] in order of appearance.","Parameters:","string $str1","string $str2","Return:","string[]"]},{"i":"to_filenamestring-str-bool-use_transliterate-string-fallback_char-string","l":"to_filename(string $str, bool $use_transliterate, string $fallback_char): string","p":["↑ Convert given string to safe filename (and keep string case).","EXAMPLE: ASCII::to_filename('שדגשדג.png', true)); // 'shdgshdg.png'","Parameters:","string $str","bool $use_transliterate pASCII::to_transliterate() is used by default - unsafe characters are simply replaced with hyphen otherwise./p","string $fallback_char","Return:","string pA string that contains only safe characters for a filename./p"]},{"i":"to_slugifystring-str-string-separator-string-language-string-replacements-bool-replace_extra_symbols-bool-use_str_to_lower-bool-use_transliterate-string","l":"to_slugify(string $str, string $separator, string $language, string[] $replacements, bool $replace_extra_symbols, bool $use_str_to_lower, bool $use_transliterate): string","p":["↑ Converts the string into an URL slug. This includes replacing non-ASCII characters with their closest ASCII equivalents, removing remaining non-ASCII and non-alphanumeric characters, and replacing whitespace with$separator. The separator defaults to a single dash, and the string is also converted to lowercase. The language of the source string can also be supplied for language-specific transliteration.","Parameters:","string $str","string $separator [optional] pThe string used to replace whitespace./p","ASCII::* $language [optional] pLanguage of the source string. (default is 'en') | ASCII::*_LANGUAGE_CODE/p","arraystring, string $replacements [optional] pA map of replaceable strings./p","bool $replace_extra_symbols [optional] pAdd some more replacements e.g. £ with pound ./p","bool $use_str_to_lower [optional] pUse string to lower for the input./p","bool $use_transliterate [optional] pUse ASCII::to_transliterate() for unknown chars./p","Return:","string pA string that has been converted to an URL slug./p"]},{"i":"to_transliteratestring-str-stringnull-unknown-bool-strict-string","l":"to_transliterate(string $str, string|null $unknown, bool $strict): string","p":["↑ Returns an ASCII version of the string. A set of non-ASCII characters are replaced with their closest ASCII counterparts, and the rest are removed unless instructed otherwise.","EXAMPLE: ASCII::to_transliterate('déjà σσς iıii'); // 'deja sss iiii'","Parameters:","string $str pThe input string./p","string|null $unknown [optional] pCharacter use if character unknown. (default is '?') But you can also use NULL to keep the unknown chars./p","bool $strict [optional] pUse transliterator_transliterate() from PHP-Intl","Return:","string pA String that contains only ASCII characters./p"]},{"l":"Unit Test","p":["Composer is a prerequisite for running the tests.","The tests can be executed by running this command from the root directory:"]},{"l":"Support","p":["For support and donations please visit Github| Issues | PayPal | Patreon.","For status updates and release announcements please visit Releases| Twitter | Patreon.","For professional support please contact me."]},{"l":"Thanks","p":["Thanks to GitHub(Microsoft) for hosting the code and a good infrastructure including Issues-Managment, etc.","Thanks to IntelliJ as they make the best IDEs for PHP and they gave me an open source license for PhpStorm!","Thanks to Travis CI for being the most awesome, easiest continous integration tool out there!","Thanks to StyleCI for the simple but powerful code style check.","Thanks to PHPStan&& Psalm for really great Static analysis tools and for discover bugs in the code!"]},{"l":"License and Copyright","p":["Released under the MIT License - see LICENSE.txt for details."]}],[{"l":"Changelog"},{"i":"201-2022-03-08","l":"2.0.1 (2022-03-08)","p":["\"To people of Russia\": There is a war in Ukraine right now. The forces of the Russian Federation are attacking civilians.","optimize some phpdocs"]},{"i":"200-2022-01-24","l":"2.0.0 (2022-01-24)","p":["prefer \"Russian - Passport (2013), ICAO\" instead of \"Russian - GOST 7.79-2000(B)\"","fix \"Ukrainian\" char-mapping (thanks to @Andr1yk0)","fix \"Persian\" char-mapping (thanks to @frost-cyber)"]},{"i":"161-2022-01-24","l":"1.6.1 (2022-01-24)","p":["revert: prefer \"Russian - Passport (2013), ICAO\" instead of \"Russian - GOST 7.79-2000(B)\"","revert: fix \"Ukrainian\" char-mapping (thanks to @Andr1yk0)","revert: fix \"Persian\" char-mapping (thanks to @frost-cyber)"]},{"i":"160-2022-01-24","l":"1.6.0 (2022-01-24)","p":["prefer \"Russian - Passport (2013), ICAO\" instead of \"Russian - GOST 7.79-2000(B)\"","fix \"Ukrainian\" char-mapping (thanks to @Andr1yk0)","fix \"Persian\" char-mapping (thanks to @frost-cyber)","fix \"ASCII::normalize_whitespace()\" -> \"CARRIAGE RETURN\" is more like \"\" and no \"\\n\"","add \"ASCII::to_ascii_remap()\" -> this method will return broken characters and is only for special cases"]},{"i":"156-2020-11-12","l":"1.5.6 (2020-11-12)","p":["\"ASCII::normalize_whitespace()\" -> can now also remove \"control characters\" if needed v2"]},{"i":"155-2020-11-12","l":"1.5.5 (2020-11-12)","p":["fix \"Greeklish\" char-mapping (thanks @sebdesign)","\"ASCII::normalize_whitespace()\" -> can now also remove \"control characters\" if needed"]},{"i":"154-2020-11-08","l":"1.5.4 (2020-11-08)","p":["add some missing replacements in U+23xx page (thanks @marcoffee)","fix \"Russian\" char-mapping (thanks @ilyahoilik)","running test with PHP 8.0 rc3"]},{"i":"153-2020-07-23","l":"1.5.3 (2020-07-23)","p":["fix \"Georgian\" char-mapping (thanks @waska14)"]},{"i":"152-2020-06-16","l":"1.5.2 (2020-06-16)","p":["add \"Bengali\" (bn) language support (thanks @eliyas5044)","fix \"Portuguese\" char-mapping","reduce the file size (removed extra comments from \"avian2/unidecode\")"]},{"i":"151-2020-05-26","l":"1.5.1 (2020-05-26)","p":["fix merge ASCII transliterations from \"avian2/unidecode\" (python)-> https://github.com/avian2/unidecode/"]},{"i":"150-2020-05-24","l":"1.5.0 (2020-05-24)","p":["merge ASCII transliterations from \"avian2/unidecode\" (python)-> https://github.com/avian2/unidecode/"]},{"i":"1411-2020-05-23","l":"1.4.11 (2020-05-23)","p":["\"composer.json\" -> remove \"autoload-dev\" stuff from \"autoload\"","\"voku/php-readme-helper\" -> auto-generate the API documentation in the README"]},{"i":"1410-2020-03-13","l":"1.4.10 (2020-03-13)","p":["ASCII::to_ascii() -> fix extra symbol handling in the regex","ASCII::to_ascii() -> fix for languages with multi-length-special-char (e.g. Greek -> 'ει' => 'i')"]},{"i":"149-2020-03-06","l":"1.4.9 (2020-03-06)","p":["ASCII::to_slugify() -> fix php warning from empty \"separator\""]},{"i":"148-2020-02-06","l":"1.4.8 (2020-02-06)","p":["small optimization for \"ASCII::to_ascii()\" performance"]},{"i":"147-2020-01-27","l":"1.4.7 (2020-01-27)","p":["fix possible wrong type from \"getDataIfExists()\" -> e.g. a bug reported where \"/data/\" was modified","inline variables","do not use \"=== true\" for \"bool\"-types"]},{"i":"146-2019-12-23","l":"1.4.6 (2019-12-23)","p":["optimize \"ASCII::to_ascii()\" performance","add \"armenian\" chars","add \"ASCII:getAllLanguages()\""]},{"i":"145-2019-12-19","l":"1.4.5 (2019-12-19)","p":["use \"@psalm-pure\" v2"]},{"i":"144-2019-12-19","l":"1.4.4 (2019-12-19)","p":["use \"@psalm-pure\""]},{"i":"143-2019-12-19","l":"1.4.3 (2019-12-19)","p":["use \"@psalm-immutable\""]},{"i":"142-2019-12-13","l":"1.4.2 (2019-12-13)","p":["optimize the performance v2","more fixes for non-ascii regex"]},{"i":"141-2019-12-13","l":"1.4.1 (2019-12-13)","p":["fix regex for non-ascii"]},{"i":"140-2019-12-13","l":"1.4.0 (2019-12-13)","p":["optimize the performance, via single char replacements"]},{"i":"136-2019-12-13","l":"1.3.6 (2019-12-13)","p":["\"ascii_extras\" -> convert the static content into ascii-> e.g.: instead of replacing \"+\" with \"più\" we use \"piu\" (Italian), because we want to use ascii anyway"]},{"i":"135-2019-11-11","l":"1.3.5 (2019-11-11)","p":["fix \"ASCII::remove_invisible_characters()\" -> do not remove invisible encoded url strings by default"]},{"i":"134-2019-10-14","l":"1.3.4 (2019-10-14)","p":["fix static cache for \"ASCII::charsArrayWithOneLanguage\""]},{"i":"133-2019-10-14","l":"1.3.3 (2019-10-14)","p":["fix \"Turkish\" mapping -> 'ä' -> 'a'"]},{"i":"132-2019-10-14","l":"1.3.2 (2019-10-14)","p":["fix language parameter usage with e.g. \"de_DE\"","re-add missing \"extra\"-mapping chars"]},{"i":"131-2019-10-13","l":"1.3.1 (2019-10-13)","p":["fix \"ASCII::to_slugify\" -> remove unicode chars","add more test for ascii chars in the mapping","fix non ascii chars in the mapping"]},{"i":"130-2019-10-12","l":"1.3.0 (2019-10-12)","p":["\"ASCII::to_ascii\" -> add some more special chars","\"ASCII::to_ascii\" -> fix \"remove unsupported chars\"","\"ASCII::to_transliterate\" -> use \"transliterator_create\" + static cache","add constants -> ASCII::* LANGUAGE_CODES","add more special latin chars / (currency) symbols","add simple tests for all supported languages","add transliteration \"el\" - greeklish","add transliteration \"fr\" (was supported before, but with chars from other languages)","add transliteration \"it\"","add transliteration \"mk\"","add transliteration \"nl\"","add transliteration \"pt\"","add transliteration \"ru\" - GOST 7.79-2000(B)","add transliteration \"ru\" - Passport (2013), ICAO","add transliteration \"zh\"","auto fix code style via \"php-cs-fixer\"","fix transliteration for \"bulgarian\" (thanks @mkosturkov)","fix transliteration for \"croatian\" (thanks @ludifonovac)","fix transliteration for \"czech\" (thanks @slepic)","fix transliteration for \"france\" (thanks @sharptsa)","fix transliteration for \"german\"","fix transliteration for \"persian\" (thanks @mardep)","fix transliteration for \"polish\" (thanks @dariusz.drobisz)","fix transliteration for \"serbian\" (thanks @ludifonovac)","fix transliteration for \"serbian\" (thanks @nikolaposa)","fix transliteration for \"swedish\" (thanks @nicholasruunu)","optimize \"Russian\" to ASCII (via \"translit.ru\")","optimize performance of array merging","optimize performance of string replacement","optimize phpdoc comments","run/fix static analyse via \"pslam\" + \"phpstan\""]},{"i":"123-2019-09-10","l":"1.2.3 (2019-09-10)","p":["fix language depending ASCII chars (the order matters)"]},{"i":"122-2019-09-10","l":"1.2.2 (2019-09-10)","p":["fix bulgarian ASCII chars | thanks @bgphp"]},{"i":"121-2019-09-07","l":"1.2.1 (2019-09-07)","p":["\"charsArray()\" -> add access to \"ASCII::$ASCII_MAPS*\"\""]},{"i":"120-2019-09-07","l":"1.2.0 (2019-09-07)","p":["\"to_slugify()\" -> use the extra ascii array"]},{"i":"110-2019-09-07","l":"1.1.0 (2019-09-07)","p":["add + split extra ascii replacements"]},{"i":"100-2019-09-05","l":"1.0.0 (2019-09-05)","p":["initial commit"]}],[{"l":"Changelog","p":["All notable changes to :package_name will be documented in this file."]},{"i":"100---202x-xx-xx","l":"1.0.0 - 202X-XX-XX","p":["initial release"]}],[{"l":"Jigsaw Docs Starter Template","p":["This is a starter template for creating a beautiful, customizable documentation site for your project with minimal effort. You’ll only have to change a few settings and you’re ready to go.","View a preview of the docs template."]},{"l":"Installation","p":["After installing Jigsaw, run the following command from your project directory:","This starter template includes samples of common page types, and comes pre-configured with:","A fully responsive navigation bar","A sidebar navigation menu","Tailwind CSS, a utility CSS framework that allows you to customize your design without touching a line of CSS","Purgecss to remove unused selectors from your CSS, resulting in smaller CSS files","Syntax highlighting using highlight.js","A script that automatically generates a sitemap.xml file","A search bar powered by Algolia DocSearch, and instructions on how to get started with their free indexing service","A custom 404 page","Docs starter template screenshot"]},{"l":"Configuring your new site","p":["As with all Jigsaw sites, configuration settings can be found in config.php; you can update the variables in that file with settings specific to your project. You can also add new configuration variables there to use across your site; take a look at the Jigsaw documentation to learn more.","Tip: This configuration file is also where you’ll define any \"collections\" (for example, a collection of the contributors to your site, or a collection of blog posts). Check out the official Jigsaw documentation to learn more."]},{"l":"Adding Content","p":["You can write your content using a variety of file types. By default, this starter template expects your content to be located in the source/docs folder. If you change this, be sure to update the URL references in navigation.php.","The first section of each content page contains a YAML header that specifies how it should be rendered. The title attribute is used to dynamically generate HTML title and OpenGraph tags for each page. The extends attribute defines which parent Blade layout this content file will render with (e.g. _layouts.documentation will render with source/_layouts/documentation.blade.php), and the section attribute defines the Blade \"section\" that expects this content to be placed into it.","Read more about Jigsaw layouts."]},{"l":"Adding Assets","p":["Any assets that need to be compiled (such as JavaScript, Less, or Sass files) can be added to the source/_assets/ directory, and Laravel Mix will process them when running npm run dev or npm run prod. The processed assets will be stored in /source/assets/build/(note there is no underscore on this second assets directory).","Then, when Jigsaw builds your site, the entire /source/assets/ directory containing your built files (and any other directories containing static assets, such as images or fonts, that you choose to store there) will be copied to the destination build folders ( build_local, on your local machine).","Files that don't require processing (such as images and fonts) can be added directly to /source/assets/.","Read more about compiling assets in Jigsaw using Laravel Mix."]},{"l":"Building Your Site","p":["Now that you’ve edited your configuration variables and know how to customize your styles and content, let’s build the site."]}]]